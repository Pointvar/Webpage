"""
Django settings for compass project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys
import socket

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.dirname(BASE_DIR))
from compass_warp.compass_conf.set_env import set_path_env

set_path_env()

hostname = socket.gethostname()


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "lpqj@xji#e)%-6vj9cjhc0&5+5v6bor)x_=s5dtdvmo$@!=e21"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    # "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "common.auth_middleware.AuthMiddleware",
    "common.excepition_middleware.ExceptionMiddleware",
]

ROOT_URLCONF = "compass.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates/dev")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "compass.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "mysql.connector.django",
        "NAME": "sh_web_dev",
        "USER": "root",
        "PASSWORD": "sh-ops",
        "HOST": "localhost",
        "PORT": "3306",
    }
}


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(asctime)s %(levelname)s {hostname} %(name)s %(funcName)s:%(lineno)d %(message)s".format(
                hostname=hostname
            )
        }
    },
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.handlers.WatchedFileHandler",
            "formatter": "verbose",
            "filename": "/alidata1/logs/dev/web/compass_liuqi.log",
        },
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    "root": {"handlers": ["file", "console"], "level": "DEBUG", "propagate": True},
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Auth Backends
AUTHENTICATION_BACKENDS = ["auth.backends.OAuthBackend"]


# # 淘宝
# OAUTH_REDIRECT_TB = {"taobao": "https://{0}/auth/taobao".format(SERVER_HOST)}
# APP_CONF_TB = {"APP_KEY": 23525554, "APP_SECRET": "a97d2c608806f706197c4e619e032b9b"}
# OAUTH_CONF_TB = {
#     "token_url": "https://oauth.taobao.com/token",
#     "auth_url": "https://oauth.taobao.com/authorize?response_type=code&client_id={0}&redirect_uri={1}&state=1212&view=web".format(
#         APP_CONF_TB["APP_KEY"], OAUTH_REDIRECT_TB["taobao"]
#     ),
#     "redirect_url": OAUTH_REDIRECT_TB["taobao"],
# }

# OAUTH2配置文件
SERVER_HOST = "dev.ituzan.com:8001"
# 拼多多

OAUTH_REDIRECT_PDD = "http://{0}/auth/pinduoduo".format(SERVER_HOST)
APP_CONF_PDD = {"APP_KEY": "cac0eeeba4c1458dae9faf9b197c00ee", "APP_SECRET": "69555508c35a0b241b6f35d658f86e1493d0f2af"}
OAUTH_CONF_PDD = "https://fuwu.pinduoduo.com/service-market/auth?response_type=code&client_id={0}&redirect_uri={1}".format(
    APP_CONF_PDD["APP_KEY"], OAUTH_REDIRECT_PDD
)
